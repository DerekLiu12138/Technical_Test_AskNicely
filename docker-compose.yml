services:
  # Backend API (PHP + Apache)
  api:
    build: ./backend
    container_name: engineer_api
    ports:
      - "${WEB_PORT}:80"
    environment:
      TZ: ${TZ}
      APP_ENV: ${APP_ENV}

      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT_INTERNAL}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASSWORD}

      DB_ADMIN_USER: ${DB_ADMIN_USER}
      DB_ADMIN_PASSWORD: ${DB_ADMIN_PASSWORD}
      ADMIN_TOKEN: ${ADMIN_TOKEN}
    depends_on:
      - db
    volumes:
      - ./backend/public:/var/www/html
      - ./backend/src:/var/www/src
      - ./backend/config:/var/www/config
      - ./backend/tests:/var/www/tests
    restart: unless-stopped

  # Database (MySQL)
  db:
    image: "mysql:${MYSQL_VERSION}"
    container_name: engineer_db
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ADMIN_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${DB_ADMIN_PASSWORD} || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  # Frontend - Production (Nginx serves built assets)
  web:
    build: ./frontend
    container_name: engineer_web
    ports:
      - "${WEB_STATIC_PORT}:80"
    depends_on:
      - api
    environment:
      - VITE_API_BASE=http://api
    restart: unless-stopped
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  # Frontend - Development (Vite dev server)
  frontend:
    image: node:20-alpine
    container_name: engineer_frontend
    working_dir: /usr/src/app
    environment:
      - CI=1
      - VITE_API_BASE=http://host.docker.internal:${WEB_PORT}
    ports:
      - "5173:5173"  # expose Vite dev server
    volumes:
      - ./frontend:/usr/src/app
      - node_modules_frontend:/usr/src/app/node_modules
    command: >
      sh -lc "
        set -e;
        if [ ! -d node_modules ]; then
          echo 'ðŸ“¦ Installing dependencies...';
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund;
        else
          echo 'âœ… Using cached node_modules';
        fi;
        npm run dev -- --host 0.0.0.0 --port 5173
      "
    restart: unless-stopped
    depends_on:
      - api

volumes:
  dbdata:
  node_modules_frontend:
